name: Update image data

on:
  push:
    branches: 
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    - cron: '45 5 * * *'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_DEFAULT_OUTPUT: json
  AWS_PAGER: ""

jobs:
  AWS:
    name: "ðŸŸ  AWS"
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      # https://github.com/aws-actions/configure-aws-credentials#notice-node12-deprecation-warning
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::426579533370:role/github_actions_image_retriever
          role-duration-seconds: 1800
          aws-region: us-east-2

      - name: Get current list of AWS regions
        run: |
          aws ec2 describe-regions \
            --filters Name=opt-in-status,Values=opted-in,opt-in-not-required | \
            jq -r '.Regions[].RegionName' | \
            sort > regions.txt

      - name: Get images for each region
        run: |
          #!/bin/bash
          mkdir aws
          for REGION in $(cat regions.txt); do
            echo "Getting images for ${REGION}"
            sem -j 6 "aws --region=${REGION} ec2 describe-images --filters Name=is-public,Values=true | jq -c .Images > aws/${REGION}.json"
          done
          sem --wait

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Store image data in artifact
        uses: actions/upload-artifact@v3
        with:
          name: aws
          path: "aws/*.json"

  Azure:
    runs-on: ubuntu-latest
    name: "ðŸ”µ Azure"
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
      - name: 'Run az commands'
        run: |
          mkdir azure
          az account show
          az group list
          az vm image list --all --only-show-errors -o json -l eastus | jq -c > azure/eastus.json

      - name: Store image data in artifact
        uses: actions/upload-artifact@v3
        with:
          name: azure
          path: "azure/*.json"

  GCP:
    runs-on: ubuntu-latest
    name: "ðŸŸ¢ GCP"
    steps:
      - uses: "actions/checkout@v3"

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: Get images
        run: gcloud compute images list --standard-images --format="json" | jq -c > all.json

      - name: Store image data in artifact
        uses: actions/upload-artifact@v3
        with:
          name: gcp
          path: "all.json"

  parser:
    name: "ðŸ”Ž Parse image data"
    runs-on: ubuntu-latest
    needs: [AWS, Azure, GCP]
    steps:
      - uses: "actions/checkout@v3"

      # https://github.com/aws-actions/configure-aws-credentials#notice-node12-deprecation-warning
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::426579533370:role/github_actions_image_retriever
          role-duration-seconds: 1800
          aws-region: us-east-2

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3

      - name: Generate directory indexes
        run: |
          mkdir raw
          mv {aws,azure,gcp} raw
          pushd raw
            find . -type d -exec sh -c 'echo "$0" && tree "$0" -L 1 -I "index.html" -s -D > "$0/index.html"' {} \;
          popd

      - name: Install s3cmd
        run: pipx install s3cmd

      - name: Upload to S3
        run: |
          s3cmd sync --acl-public --delete-removed --guess-mime-type \
            $(pwd)/raw/ s3://cloudx-json-bucket/raw/