name: Update image data

on:
  # push:
  #   branches: 
  #     - "main"
  # pull_request:
  #   branches:
  #     - "main"
  schedule:
    - cron: '45 5 * * *'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_DEFAULT_OUTPUT: json
  AWS_PAGER: ""

jobs:
  AWS:
    name: "ðŸŸ  AWS"
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      # https://github.com/aws-actions/configure-aws-credentials#notice-node12-deprecation-warning
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::426579533370:role/github_actions_image_retriever
          role-duration-seconds: 1800
          aws-region: us-east-2

      - name: Get current list of AWS regions
        run: |
          aws ec2 describe-regions \
            --filters Name=opt-in-status,Values=opted-in,opt-in-not-required | \
            jq -r '.Regions[].RegionName' | \
            sort > regions.txt

      - name: Get images for each region
        run: |
          #!/bin/bash
          mkdir aws
          for REGION in $(cat regions.txt); do
            echo "Getting images for ${REGION}"
            sem -j 6 "aws --region=${REGION} ec2 describe-images --filters Name=is-public,Values=true | jq -c .Images > aws/${REGION}.json"
          done
          sem --wait

      - name: Store image data in artifact
        uses: actions/upload-artifact@v3
        with:
          name: aws
          path: "aws/*.json"

  Azure:
    runs-on: ubuntu-latest
    name: "ðŸ”µ Azure"
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
      # Skipping the EUAP regions which are early access regions.
      - name: Get Azure locations
        run: |
          az account list-locations | \
            jq -r '.[] | select(.metadata.regionCategory == "Recommended") | .name' | grep -v euap | sort > locations.txt

      - name: 'Run az commands'
        run: |
          #!/bin/bash
          mkdir azure
          for LOCATION in $(cat locations.txt); do
            echo "Getting images for ${LOCATION}"
            sem -j 10 "az vm image list --all --only-show-errors -o json -l $LOCATION | jq -c > azure/${LOCATION}.json"
          done
          sem --wait

      - name: Store image data in artifact
        uses: actions/upload-artifact@v3
        with:
          name: azure
          path: "azure/*.json"

  Google:
    runs-on: ubuntu-latest
    name: "ðŸŸ¢ Google"
    steps:
      - uses: "actions/checkout@v3"

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: Get images
        run: gcloud compute images list --standard-images --format="json" | jq -c > global.json

      - name: Store image data in artifact
        uses: actions/upload-artifact@v3
        with:
          name: google
          path: "global.json"

  parser:
    name: "ðŸ”Ž Parse image data"
    runs-on: ubuntu-latest
    needs: [AWS, Azure, Google]
    steps:
      - uses: "actions/checkout@v3"

      # https://github.com/aws-actions/configure-aws-credentials#notice-node12-deprecation-warning
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::426579533370:role/github_actions_image_retriever
          role-duration-seconds: 1800
          aws-region: us-east-2

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3

      - name: Generate directory indexes
        run: |
          mkdir raw
          mv {aws,azure,google} raw
          TIMESTAMP=$(date +%Y%m%d)
          pushd raw
            tree . -H "/raw" -T "Cloud Image Directory (raw data from ${TIMESTAMP})" -o index.html
          popd

      - name: Upload to S3
        run: |
          pipx install s3cmd
          s3cmd sync --acl-public --delete-removed --guess-mime-type --no-mime-magic \
            $(pwd)/raw/ s3://cloudx-json-bucket/raw/
